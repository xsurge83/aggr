// Generated by CoffeeScript 1.6.2
var Aggr, Request, async, exports, superagent, _,
  __hasProp = {}.hasOwnProperty;

superagent = require('superagent');

async = require('async');

_ = require('underscore');

Request = (function() {
  Request.prototype.url = null;

  function Request(urlTemplate, urlParams) {
    this.urlTemplate = urlTemplate;
    this.urlParams = urlParams;
  }

  Request.prototype.parseUrl = function() {
    var urlParam, value, _ref, _results;

    this.url = this.urlTemplate.toLowerCase();
    _ref = this.urlParams;
    _results = [];
    for (urlParam in _ref) {
      if (!__hasProp.call(_ref, urlParam)) continue;
      value = _ref[urlParam];
      _results.push(this.url = this.url.replace(':' + urlParam.toLowerCase(), value));
    }
    return _results;
  };

  return Request;

})();

Aggr = (function() {
  Aggr.prototype.requests = [];

  function Aggr(http) {
    this.http = http != null ? http : new superagent.agent();
    this.getBindings = this.http.get.bind(this.http);
  }

  Aggr.prototype.request = function(urlTemplate, urlParam) {
    var request;

    if (typeof ulrParam === 'object') {
      urlParam = {
        id: urlParam
      };
    }
    request = new Request(urlTemplate, urlParam);
    request.parseUrl();
    this.requests.push(request);
    return this;
  };

  Aggr.prototype.exec = function(callback) {
    var asyncTasks, request, _i, _len, _ref;

    asyncTasks = [];
    debugger;
    _ref = this.requests;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      request = _ref[_i];
      console.log(request.url);
      asyncTasks.push(async.apply(this.getBindings, request.url));
    }
    return async.parallel(asyncTasks, function(error, responses) {
      if (responses.length === 1) {
        responses = responses[0];
      }
      console.log("my test%j", responses);
      return callback(error, responses);
    });
  };

  return Aggr;

})();

Aggr.Request = Request;

exports = module.exports = Aggr;
